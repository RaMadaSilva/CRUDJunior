// <auto-generated />
using System;
using CRUDJunior.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRUDJunior.Migrations
{
    [DbContext(typeof(CrudeContext))]
    partial class CrudeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("CRUDJunior.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CPFId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NomeCompletoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CPFId");

                    b.HasIndex("NomeCompletoId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("CRUDJunior.Models.Assinatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Expirada")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Termino")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Assinaturas");
                });

            modelBuilder.Entity("CRUDJunior.Models.ValueObject.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("CRUDJunior.Models.ValueObject.Nome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UltimoNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Nome");
                });

            modelBuilder.Entity("CRUDJunior.Models.Aluno", b =>
                {
                    b.HasOne("CRUDJunior.Models.ValueObject.Documento", "CPF")
                        .WithMany()
                        .HasForeignKey("CPFId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRUDJunior.Models.ValueObject.Nome", "NomeCompleto")
                        .WithMany()
                        .HasForeignKey("NomeCompletoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CPF");

                    b.Navigation("NomeCompleto");
                });

            modelBuilder.Entity("CRUDJunior.Models.Assinatura", b =>
                {
                    b.HasOne("CRUDJunior.Models.Aluno", "Aluno")
                        .WithMany("Assinaturas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("CRUDJunior.Models.Aluno", b =>
                {
                    b.Navigation("Assinaturas");
                });
#pragma warning restore 612, 618
        }
    }
}
